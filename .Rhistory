kable(.,
format = "html",
digits = 2) %>%
kable_classic(font_size = 25)
# Chunk 6
#| code-fold: true
school_usa = read_csv("https://raw.githubusercontent.com/uopsych/psy611/master/data/census_at_school_usa.csv")
school_usa$Region = "USA"
school %>%
full_join(select(school_usa, Region, Superpower)) %>%
filter(!is.na(Superpower)) %>%
group_by(Region, Superpower) %>%
summarize(Frequency = n()) %>%
mutate(Proportion = Frequency/sum(Frequency)) %>%
ggplot(aes(x = Region, y = Proportion, fill = Region)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
labs(
x = NULL,
title = "Category Proportion as a \nfunction of Source") +
guides(fill = "none") +
facet_wrap(~Superpower) +
theme_bw(base_size = 20) +
theme(plot.title.position = "plot")
# Chunk 7
#| code-fold: true
school %>%
full_join(select(school_usa, Region, Superpower)) %>%
mutate(Region = ifelse(Region == "OR", "OR", "USA")) %>%
filter(!is.na(Superpower)) %>%
group_by(Region, Superpower) %>%
summarize(Frequency = n()) %>%
mutate(Proportion = Frequency/sum(Frequency)) %>%
select(-Frequency) %>%
spread(Region, Proportion) %>%
kable(.,
col.names = c("Superpower", "OR Observed\nProportion",
"USA\nProportion"),
format = "html",
digits = 2)%>%
kable_classic(font_size = 25)
# Chunk 8
(critical_val = qchisq(p = 0.95, df = 5-1))
# Chunk 9
#| code-fold: true
#|
data.frame(x = seq(0,20)) %>%
ggplot(aes(x = x)) +
stat_function(fun = function(x) dchisq(x, df = 5-1), geom = "line") +
stat_function(fun = function(x) dchisq(x, df = 5-1), geom = "area", fill = "purple",
xlim =c(critical_val, 20)) +
geom_vline(aes(xintercept = critical_val), linetype = 2, color = "purple")+
geom_text(aes(x = critical_val+2, y = dchisq(critical_val, 5-1) + .05,
label = paste("Critical Value =", round (critical_val,2))), angle = 90)+
labs(x = "Chi-Square", y = "Density", title = "Area under the curve") +
theme_pubr(base_size = 20)
# Chunk 10
usa_freq = table(school_usa$Superpower)
usa_prop = usa_freq/sum(usa_freq)
school %>%
filter(!is.na(Superpower)) %>%
group_by(Superpower) %>%
summarize(Frequency = n()) %>%
mutate(Expected = usa_prop*200,
Expected = round(Expected, 2)) %>%
kable(., format = "html", digits = 2, align = c("l", "c", "c"),
col.names = c("Superpower", "Observed\nFreq", "Expected Freq"))
# Chunk 11: create obs
or_observed = table(school$Superpower)
or_expected = (table(school_usa$Superpower)/sum(table(school_usa$Superpower)))*200
or_observed
or_expected
# Chunk 12
# Chunk 13
(chi_square = sum((or_observed - or_expected)^2/or_expected))
# Chunk 14
# Chunk 15
(chi_square = sum((or_observed - or_expected)^2/or_expected))
(critical_val = qchisq(p = 0.95, df = length(or_expected)-1))
# Chunk 16
(chi_square = sum((or_observed - or_expected)^2/or_expected))
(critical_val = qchisq(p = 0.95, df = length(or_expected)-1))
(p_val = pchisq(q = chi_square, df = length(or_expected)-1, lower.tail = F))
#| code-fold: true
#|
data.frame(x = seq(0,20)) %>%
ggplot(aes(x = x)) +
stat_function(fun = function(x) dchisq(x, df = length(or_expected)-1), geom = "line") +
stat_function(fun = function(x) dchisq(x, df = length(or_expected)-1), geom = "area", fill = "purple",
xlim =c(critical_val, 20)) +
geom_vline(aes(xintercept = critical_val), linetype = 2, color = "purple")+
geom_vline(aes(xintercept = chi_square), linetype = 2, color = "black")+
geom_text(aes(x = critical_val+2, y = dchisq(critical_val, length(or_expected)-1) + .05,
label = paste("Critical Value =", round (critical_val,2))), angle = 90)+
geom_text(aes(x = chi_square+2, y = dchisq(critical_val, length(or_expected)-1) + .05,
label = paste("Test statistic =", round (chi_square,2))), angle = 90)+
labs(x = "Chi-Square", y = "Density", title = "Area under the curve") +
theme_pubr(base_size = 20)
#|code-fold: true
chisq_tab <- full_join(expected, observed) %>%
mutate(diff = (observed - expected)) %>%
kable(., format = "html", digits = 2,
align = c("l", "l", "c","c", "c", "c", "c"))
full_join(expected, observed) %>%
mutate(diff = (observed - expected)) %>%
kable(., format = "html", digits = 2)
#| code-fold: true
chisq_tab <- chisq_tab %>%
mutate(sq_diff=(diff^2)) %>%
mutate(error = sq_diff/50)
#| code-fold: true
chisq_tab <- full_join(expected, observed) %>%
mutate(diff = (observed - expected))
#| code-fold: true
chisq_tab <- chisq_tab %>%
mutate(sq_diff=(diff^2)) %>%
mutate(error = sq_diff/50)
length(chisq_tab$days)-1
qchisq(p = 0.95, df = length(chisq_tab$days)-1)
#| code-fold: true
#|
data.frame(x = seq(0,20)) %>%
ggplot(aes(x = x)) +
stat_function(fun = function(x) dchisq(x, df = length(chisq_tab$days)-1), geom = "line") +
stat_function(fun = function(x) dchisq(x, df = length(chisq_tab$days)-1), geom = "area", fill = "purple",
xlim =c(critical_val, 20)) +
geom_vline(aes(xintercept = critical_val), linetype = 2, color = "purple")+
geom_vline(aes(xintercept = chi_square), linetype = 2, color = "black")+
geom_text(aes(x = critical_val+2, y = dchisq(critical_val, length(chisq_tab$days)-1) + .05,
label = paste("Critical Value =", round (critical_val,2))), angle = 90)+
geom_text(aes(x = chi_square+2, y = dchisq(critical_val, length(chisq_tab$days)-1) + .05,
label = paste("Test statistic =", round (chi_square,2))), angle = 90)+
labs(x = "Chi-Square", y = "Density", title = "Area under the curve") +
theme_pubr(base_size = 20)
critical_val <- qchisq(p = 0.95, df = length(chisq_tab$days)-1)
critical_val
chi_square <- sum(chisq_tab$error)
chi_square
#| code-fold: true
#|
data.frame(x = seq(0,20)) %>%
ggplot(aes(x = x)) +
stat_function(fun = function(x) dchisq(x, df = length(chisq_tab$days)-1), geom = "line") +
stat_function(fun = function(x) dchisq(x, df = length(chisq_tab$days)-1), geom = "area", fill = "purple",
xlim =c(critical_val, 20)) +
geom_vline(aes(xintercept = critical_val), linetype = 2, color = "purple")+
geom_vline(aes(xintercept = chi_square), linetype = 2, color = "black")+
geom_text(aes(x = critical_val+2, y = dchisq(critical_val, length(chisq_tab$days)-1) + .05,
label = paste("Critical Value =", round (critical_val,2))), angle = 90)+
geom_text(aes(x = chi_square+2, y = dchisq(critical_val, length(chisq_tab$days)-1) + .05,
label = paste("Test statistic =", round (chi_square,2))), angle = 90)+
labs(x = "Chi-Square", y = "Density", title = "Area under the curve") +
theme_pubr(base_size = 20)
#| code-fold: true
#|
data.frame(x = seq(0,20)) %>%
ggplot(aes(x = x)) +
stat_function(fun = function(x) dchisq(x, df = length(chisq_tab$days)-1), geom = "line") +
stat_function(fun = function(x) dchisq(x, df = length(chisq_tab$days)-1), geom = "area", fill = "purple",
xlim =c(chi_square, 20)) +
geom_vline(aes(xintercept = critical_val), linetype = 2, color = "black")+
geom_vline(aes(xintercept = chi_square), linetype = 2, color = "purple")+
geom_text(aes(x = critical_val+2, y = dchisq(critical_val, length(chisq_tab$days)-1) + .05,
label = paste("Critical Value =", round (critical_val,2))), angle = 90)+
geom_text(aes(x = chi_square+2, y = dchisq(critical_val, length(chisq_tab$days)-1) + .05,
label = paste("Test statistic =", round (chi_square,2))), angle = 90)+
labs(x = "Chi-Square", y = "Density", title = "Area under the curve") +
theme_pubr(base_size = 20)
school <- read_csv("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/example2-chisq.csv") %>%
filter(!is.na(Superpower))
#| code-fold: true
school %>%
group_by(Superpower) %>%
summarize(Frequency = n()) %>%
mutate(Proportion = Frequency/sum(Frequency)) %>%
kable(.,
format = "html",
digits = 2) %>%
kable_classic(font_size = 25)
#| code-fold: true
school_usa <-  read_csv("https://raw.githubusercontent.com/uopsych/psy611/master/data/census_at_school_usa.csv")
school_usa$Region = "USA"
school %>%
full_join(select(school_usa, Region, Superpower)) %>%
filter(!is.na(Superpower)) %>%
group_by(Region, Superpower) %>%
summarize(Frequency = n()) %>%
mutate(Proportion = Frequency/sum(Frequency)) %>%
ggplot(aes(x = Region, y = Proportion, fill = Region)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
labs(
x = NULL,
title = "Category Proportion as a \nfunction of Source") +
guides(fill = "none") +
facet_wrap(~Superpower) +
theme_bw(base_size = 20) +
theme(plot.title.position = "plot")
View(observed)
observed
observed[1,2]
school <- read_csv("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/example2-chisq.csv") %>%
filter(!is.na(Superpower))
library(dplyr)
school <- read_csv("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/example2-chisq.csv") %>%
filter(!is.na(Superpower))
library(rio)
school <- read_csv("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/example2-chisq.csv") %>%
filter(!is.na(Superpower))
library(tidyverse)
school <- read_csv("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/example2-chisq.csv") %>%
filter(!is.na(Superpower))
# File management
library(here)
# for dplyr, ggplot
library(tidyverse)
# Making things look nice
library(ggpubr)
school <- read_csv("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/example2-chisq.csv") %>%
mutate(Score_in_memory_game = as.numeric(Score_in_memory_game))
school <- school %>%
filter(!is.na(Score_in_memory_game))
library(rio)
school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/example2-chisq.csv") %>%
mutate(Score_in_memory_game = as.numeric(Score_in_memory_game))
View(school)
glimpse(school$Score_in_memory_game)
school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/example2-chisq.csv")
glimpse(school$Score_in_memory_game)
lsr::oneSampleTTest(x = school$Score_in_memory_game,
mu = 45.05, one.sided = FALSE)
school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/example2-chisq.csv") %>%
mutate(Score_in_memory_game = as.numeric(Score_in_memory_game))
school <- school %>%
filter(!is.na(Score_in_memory_game))
lsr::oneSampleTTest(x = school$Score_in_memory_game,
mu = 45.05, one.sided = FALSE)
View(school)
state_school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv")
View(state_school)
mean(state_school$Importance_conserving_water, na.rm=T)
t.test(state_school$Importance_conserving_water ~ state_school$Region)
hist(state_school$Sleep_Hours_Schoolnight)
state_school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv")
hist(state_school$Sleep_Hours_Schoolnight)
hist(state_school$as.numeric(Sleep_Hours_Schoolnight))
hist(as.numeric(state_school$Sleep_Hours_Schoolnight))
state_school %>%
ggplot(aes(Sleep_Hours_Schoolnight)) +
geom_bar()
state_school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv")
View(state_school)
state_school %>%
ggplot(aes(Sleep_Hours_Schoolnight)) +
geom_bar()
lsr::oneSampleTTest(x = school$Score_in_memory_game,
mu = 45.05, one.sided = FALSE)
state_school %>%
ggplot(aes(Sleep_Hours_Schoolnight,
color = Region)) +
geom_bar(position = "dodge")
state_school %>%
ggplot(aes(Sleep_Hours_Schoolnight,
fill = Region)) +
geom_bar(position = "dodge")
state_school %>%
ggplot(aes(Sleep_Hours_Schoolnight,
fill = Region)) +
geom_qq()
state_school %>%
ggplot(aes(Sleep_Hours_Schoolnight)) +
geom_qq()
car::qqPlot(state_school$Sleep_Hours_Schoolnight)
shapiro.test(state_school$Sleep_Hours_Schoolnight)
# Perform Levene's test for equality of variances
leveneTest(Sleep_Hours_Schoolnight ~ Region,
data = state_school)
shapiro.test(state_school$Sleep_Hours_Schoolnight)
# Perform Levene's test for equality of variances
leveneTest(Sleep_Hours_Schoolnight ~ Region,
data = state_school)
library(car)
# Perform Levene's test for equality of variances
leveneTest(Sleep_Hours_Schoolnight ~ Region,
data = state_school)
# Chunk 1
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
# Chunk 2
# File management
library(here)
# for dplyr, ggplot
library(tidyverse)
# Making things look nice
library(ggpubr)
#Loading data
library(rio)
# Assumption Checks
library(car)
library(lsr)
#Remove Scientific Notation
options(scipen=999)
# Chunk 3
school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/example2-chisq.csv") %>%
mutate(Score_in_memory_game = as.numeric(Score_in_memory_game))
school <- school %>%
filter(!is.na(Score_in_memory_game))
# Chunk 4
t.test(x = school$Score_in_memory_game,
mu = 45.05,
alternative = "two.sided")
# Chunk 5
lsr::oneSampleTTest(x = school$Score_in_memory_game,
mu = 45.05, one.sided = FALSE)
# Chunk 6
#Load sleep data: https://vincentarelbundock.github.io/Rdatasets/datasets.html
sleep <- read_csv("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/sleepstudy.csv")
model = lm(Reaction ~ Days, data = sleep)
summary(model)
# Chunk 7
state_school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv")
# Chunk 8
hist(as.numeric(state_school$Sleep_Hours_Schoolnight))
# Chunk 9
state_school %>%
ggplot(aes(Sleep_Hours_Schoolnight,
fill = Region)) +
geom_bar(position = "dodge")
# Chunk 10
qqPlot(state_school$Sleep_Hours_Schoolnight)
# Chunk 11
shapiro.test(state_school$Sleep_Hours_Schoolnight)
# Chunk 12
# Perform Levene's test for equality of variances
leveneTest(Sleep_Hours_Schoolnight ~ Region,
data = state_school)
View(state_school)
names(state_school)
independentSamplesTTest(
formula = Region ~ Sleep_Hours_Schoolnight,
data = state_school,
var.equal = TRUE #default is FALSE
)
str(state_school$Sleep_Hours_Schoolnight)
str(state_school$Region)
state_school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv") %>%
mutate(Region = as.factor(Region))
independentSamplesTTest(
formula = Region ~ Sleep_Hours_Schoolnight,
data = state_school,
var.equal = TRUE #default is FALSE
)
independentSamplesTTest(
formula = Sleep_Hours_Schoolnight ~ Region,
data = state_school,
var.equal = TRUE #default is FALSE
)
state_school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv")
independentSamplesTTest(
formula = Sleep_Hours_Schoolnight ~ Region,
data = state_school,
var.equal = TRUE #default is FALSE
)
test <- independentSamplesTTest(
formula = Sleep_Hours_Schoolnight ~ Region,
data = state_school,
var.equal = TRUE #default is FALSE
)
6.994 - 6.989
t.test(
formula = Sleep_Hours_Schoolnight ~ Region,
data = state_school,
var.equal = TRUE
)
ggbetweenstats(
data  = state_school,
x     = Region,
y     = Sleep_Hours_Schoolnight,
title = "Distribution of hours of sleep across Region"
)
install.packages('ggstatsplot')
library(ggstatsplot)
ggbetweenstats(
data  = state_school,
x     = Region,
y     = Sleep_Hours_Schoolnight,
title = "Distribution of hours of sleep across Region"
)
independentSamplesTTest(
formula = Sleep_Hours_Schoolnight ~ Region,
data = state_school,
var.equal = FALSE
)
t.test(
formula = Sleep_Hours_Schoolnight ~ Region,
data = state_school,
var.equal = FALSE
)
t.test(
formula = Sleep_Hours_Schoolnight ~ Region,
data = state_school,
var.equal = TRUE
)
?t.test()
# Chunk 1
# Use this code chunk to have all your libraries in one spot and where you can load in the data
library(here)
library(rio)
library(psych)
library(dplyr)
library(pwr)
library(tidyverse)
#Cool new package
library(infer)
install.packages('infer')
# Chunk 1
# Use this code chunk to have all your libraries in one spot and where you can load in the data
library(here)
library(rio)
library(psych)
library(dplyr)
library(pwr)
library(tidyverse)
#Cool new package
library(infer)
sleep_data <- import(here("Labs","Lab 2_Hypothesis-Power", "SleepData.sav"))
state_school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv")
library(lsr)
# File management
library(here)
# for dplyr, ggplot
library(tidyverse)
#Loading data
library(rio)
# Assumption Checks
library(car)
#Remove Scientific Notation
options(scipen=999)
state_school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv")
names(state_school)
state_school %>%
select(Region, Sleep_Hours_Schoolnight, Sleep_Hours_Non_Schoolnight) %>%
glimpse()
state_school %>%
select(Region, Sleep_Hours_Schoolnight, Sleep_Hours_Non_Schoolnight) %>%
head()
state_school %>%
select(Gender, Ageyears, Sleep_Hours_Schoolnight, Sleep_Hours_Non_Schoolnight) %>%
head() #look at first few observations
state_school_sleep <- state_school %>%
mutate(sleep_diff = Sleep_Hours_Schoolnight - Sleep_Hours_Non_Schoolnight) %>%
select(Gender, Ageyears, Sleep_Hours_Schoolnight, Sleep_Hours_Non_Schoolnight, sleep_diff)
View(state_school_sleep)
sleep_state_school <- state_school %>%
mutate(sleep_diff = Sleep_Hours_Schoolnight - Sleep_Hours_Non_Schoolnight) %>%
select(Gender, Ageyears, Sleep_Hours_Schoolnight,
Sleep_Hours_Non_Schoolnight, sleep_diff)
head(sleep_state_school)
sleep_state_school %>%
ggplot(aes(sleep_diff)) +
geom_histogram()
#the qt() function is for a 1 tailed test, so we are having to divide it in half to get both tails
alpha <- 0.05
n <- 6
qt(alpha/2, n-1)
diff <- data.frame(-3, 0, -8, 3, 3, -2)
View(diff)
diff <- data.frame(
id = c(1,2,3,4,5,6),
score = c(-3, 0, -8, 3, 3, -2))
View(diff)
ex1 <- data.frame(
id = c(1,2,3,4,5,6),
blue = c(3,9,2,9,5,5),
orange = c(6,9,10,6,2,7),
diff_score = c(-3, 0, -8, 3, 3, -2))
mean(ex1$diff_score)
sd(ex1$diff_score)
d/(sd/sqrt(n))
#Mean of difference scores
d <- mean(ex1$diff_score)
d
sd_diff <- sd(ex1$diff_score)
sd_diff
n <- nrow(ex1)
d/(sd/sqrt(n))
str(n)
sqrt(n)
d/(sd/(sqrt(n)))
d/(sd_diff/(sqrt(n)))
t_crit <- qt(alpha/2, n-1)
#Probability of this t-statistic
p_val <- pt(t_stat, n-1)
t_stat <- d/(sd_diff/(sqrt(n)))
#Probability of this t-statistic
p_val <- pt(t_stat, n-1)
sleep_state_school %>%
ggplot(aes(sleep_diff)) +
geom_histogram()
oneSampleTTest(sleep_state_school$sleep_diff, mu = 0)
pairedSamplesTTest(
formula = ~ Sleep_Hours_Schoolnight + Sleep_Hours_Non_Schoolnight,
data = sleep_state_school
)
t.test(
x = sleep_state_school$Sleep_Hours_Schoolnight,
y = sleep_state_school$Sleep_Hours_Non_Schoolnight,
paired = TRUE
)
pairedSamplesTTest(
formula = ~ Sleep_Hours_Schoolnight + Sleep_Hours_Non_Schoolnight,
data = sleep_state_school
)
