data = state_school)
library(car)
# Perform Levene's test for equality of variances
leveneTest(Sleep_Hours_Schoolnight ~ Region,
data = state_school)
# Chunk 1
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
# Chunk 2
# File management
library(here)
# for dplyr, ggplot
library(tidyverse)
# Making things look nice
library(ggpubr)
#Loading data
library(rio)
# Assumption Checks
library(car)
library(lsr)
#Remove Scientific Notation
options(scipen=999)
# Chunk 3
school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/example2-chisq.csv") %>%
mutate(Score_in_memory_game = as.numeric(Score_in_memory_game))
school <- school %>%
filter(!is.na(Score_in_memory_game))
# Chunk 4
t.test(x = school$Score_in_memory_game,
mu = 45.05,
alternative = "two.sided")
# Chunk 5
lsr::oneSampleTTest(x = school$Score_in_memory_game,
mu = 45.05, one.sided = FALSE)
# Chunk 6
#Load sleep data: https://vincentarelbundock.github.io/Rdatasets/datasets.html
sleep <- read_csv("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/sleepstudy.csv")
model = lm(Reaction ~ Days, data = sleep)
summary(model)
# Chunk 7
state_school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv")
# Chunk 8
hist(as.numeric(state_school$Sleep_Hours_Schoolnight))
# Chunk 9
state_school %>%
ggplot(aes(Sleep_Hours_Schoolnight,
fill = Region)) +
geom_bar(position = "dodge")
# Chunk 10
qqPlot(state_school$Sleep_Hours_Schoolnight)
# Chunk 11
shapiro.test(state_school$Sleep_Hours_Schoolnight)
# Chunk 12
# Perform Levene's test for equality of variances
leveneTest(Sleep_Hours_Schoolnight ~ Region,
data = state_school)
View(state_school)
names(state_school)
independentSamplesTTest(
formula = Region ~ Sleep_Hours_Schoolnight,
data = state_school,
var.equal = TRUE #default is FALSE
)
str(state_school$Sleep_Hours_Schoolnight)
str(state_school$Region)
state_school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv") %>%
mutate(Region = as.factor(Region))
independentSamplesTTest(
formula = Region ~ Sleep_Hours_Schoolnight,
data = state_school,
var.equal = TRUE #default is FALSE
)
independentSamplesTTest(
formula = Sleep_Hours_Schoolnight ~ Region,
data = state_school,
var.equal = TRUE #default is FALSE
)
state_school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv")
independentSamplesTTest(
formula = Sleep_Hours_Schoolnight ~ Region,
data = state_school,
var.equal = TRUE #default is FALSE
)
test <- independentSamplesTTest(
formula = Sleep_Hours_Schoolnight ~ Region,
data = state_school,
var.equal = TRUE #default is FALSE
)
6.994 - 6.989
t.test(
formula = Sleep_Hours_Schoolnight ~ Region,
data = state_school,
var.equal = TRUE
)
ggbetweenstats(
data  = state_school,
x     = Region,
y     = Sleep_Hours_Schoolnight,
title = "Distribution of hours of sleep across Region"
)
install.packages('ggstatsplot')
library(ggstatsplot)
ggbetweenstats(
data  = state_school,
x     = Region,
y     = Sleep_Hours_Schoolnight,
title = "Distribution of hours of sleep across Region"
)
independentSamplesTTest(
formula = Sleep_Hours_Schoolnight ~ Region,
data = state_school,
var.equal = FALSE
)
t.test(
formula = Sleep_Hours_Schoolnight ~ Region,
data = state_school,
var.equal = FALSE
)
t.test(
formula = Sleep_Hours_Schoolnight ~ Region,
data = state_school,
var.equal = TRUE
)
?t.test()
# Chunk 1
# Use this code chunk to have all your libraries in one spot and where you can load in the data
library(here)
library(rio)
library(psych)
library(dplyr)
library(pwr)
library(tidyverse)
#Cool new package
library(infer)
install.packages('infer')
# Chunk 1
# Use this code chunk to have all your libraries in one spot and where you can load in the data
library(here)
library(rio)
library(psych)
library(dplyr)
library(pwr)
library(tidyverse)
#Cool new package
library(infer)
sleep_data <- import(here("Labs","Lab 2_Hypothesis-Power", "SleepData.sav"))
state_school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv")
library(lsr)
# File management
library(here)
# for dplyr, ggplot
library(tidyverse)
#Loading data
library(rio)
# Assumption Checks
library(car)
#Remove Scientific Notation
options(scipen=999)
state_school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv")
names(state_school)
state_school %>%
select(Region, Sleep_Hours_Schoolnight, Sleep_Hours_Non_Schoolnight) %>%
glimpse()
state_school %>%
select(Region, Sleep_Hours_Schoolnight, Sleep_Hours_Non_Schoolnight) %>%
head()
state_school %>%
select(Gender, Ageyears, Sleep_Hours_Schoolnight, Sleep_Hours_Non_Schoolnight) %>%
head() #look at first few observations
state_school_sleep <- state_school %>%
mutate(sleep_diff = Sleep_Hours_Schoolnight - Sleep_Hours_Non_Schoolnight) %>%
select(Gender, Ageyears, Sleep_Hours_Schoolnight, Sleep_Hours_Non_Schoolnight, sleep_diff)
View(state_school_sleep)
sleep_state_school <- state_school %>%
mutate(sleep_diff = Sleep_Hours_Schoolnight - Sleep_Hours_Non_Schoolnight) %>%
select(Gender, Ageyears, Sleep_Hours_Schoolnight,
Sleep_Hours_Non_Schoolnight, sleep_diff)
head(sleep_state_school)
sleep_state_school %>%
ggplot(aes(sleep_diff)) +
geom_histogram()
#the qt() function is for a 1 tailed test, so we are having to divide it in half to get both tails
alpha <- 0.05
n <- 6
qt(alpha/2, n-1)
diff <- data.frame(-3, 0, -8, 3, 3, -2)
View(diff)
diff <- data.frame(
id = c(1,2,3,4,5,6),
score = c(-3, 0, -8, 3, 3, -2))
View(diff)
ex1 <- data.frame(
id = c(1,2,3,4,5,6),
blue = c(3,9,2,9,5,5),
orange = c(6,9,10,6,2,7),
diff_score = c(-3, 0, -8, 3, 3, -2))
mean(ex1$diff_score)
sd(ex1$diff_score)
d/(sd/sqrt(n))
#Mean of difference scores
d <- mean(ex1$diff_score)
d
sd_diff <- sd(ex1$diff_score)
sd_diff
n <- nrow(ex1)
d/(sd/sqrt(n))
str(n)
sqrt(n)
d/(sd/(sqrt(n)))
d/(sd_diff/(sqrt(n)))
t_crit <- qt(alpha/2, n-1)
#Probability of this t-statistic
p_val <- pt(t_stat, n-1)
t_stat <- d/(sd_diff/(sqrt(n)))
#Probability of this t-statistic
p_val <- pt(t_stat, n-1)
sleep_state_school %>%
ggplot(aes(sleep_diff)) +
geom_histogram()
oneSampleTTest(sleep_state_school$sleep_diff, mu = 0)
pairedSamplesTTest(
formula = ~ Sleep_Hours_Schoolnight + Sleep_Hours_Non_Schoolnight,
data = sleep_state_school
)
t.test(
x = sleep_state_school$Sleep_Hours_Schoolnight,
y = sleep_state_school$Sleep_Hours_Non_Schoolnight,
paired = TRUE
)
pairedSamplesTTest(
formula = ~ Sleep_Hours_Schoolnight + Sleep_Hours_Non_Schoolnight,
data = sleep_state_school
)
install.packages('palmerpenguins')
penguins %>%
count()
# File management
library(here)
# for dplyr, ggplot2
library(tidyverse)
#Loading data
library(rio)
#for the penguins dataset
#install.packages('palmerpenguins')
library(palmerpenguins)
#Remove Scientific Notation
options(scipen=999)
penguins %>%
count()
View(penguins)
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g))
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g)) %>%
geom_poin()
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g)) %>%
geom_point()
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point()
install.packages('datasauRus')
library(datasauRus)
test <- datasaurus_dozen_wide
View(test)
test <- datasaurus_dozen
data1 <- test %>% filter(dataset == "away")
data2 <- test %>% filter(dataset == "circle")
data3 <- test %>% filter(dataset == "dino")
write.csv(data1, "data1.csv", row.names = FALSE)
write.csv(data2, "data2.csv", row.names = FALSE)
write.csv(data3, "data3.csv", row.names = FALSE)
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point(aes(color = species))
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point(aes(color = species)) +
geom_smooth()
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point(aes(color = species)) +
geom_smooth(method = 'lm')
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point(aes(color = species)) +
geom_smooth(aes(x = flipper_length_mm,
y = body_mass_g))
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point(aes(color = species)) +
geom_smooth()
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point(aes(color = species)) +
geom_smooth(method = 'nls')
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g,
color = species)) +
geom_point(aes(color = species)) +
geom_smooth(method = 'lm')
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g,
color = species)) +
geom_point(aes(color = species)) +
geom_smooth(method = 'nls')
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g,
color = species)) +
geom_point() +
geom_smooth(method = 'lm')
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g,
color = species)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(
title = "Palmer Penguins",
subtitle = "Body Mass by Flipper Length",
x = "Flipper Length (mm)"
)
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g,
color = species)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(
title = "Palmer Penguins",
subtitle = "Body Mass by Flipper Length",
x = "Flipper Length (mm)"
)
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g,
color = species)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(
title = "Palmer Penguins",
subtitle = "Body Mass by Flipper Length",
x = "Flipper Length (mm)",
y = "Body Mass (g)"
)
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g,
color = species)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(
title = "Palmer Penguins",
subtitle = "Body Mass by Flipper Length",
x = "Flipper Length (mm)",
y = "Body Mass (g)",
color = "Species"
)
penguin <- data(penguins)
data(penguins)
View(penguins_raw)
penguins %>%
group_by(species) %>%
summarize(
mean_flipper = mean(flipper_length_mm)
)
penguins %>%
group_by(species) %>%
summarize(
mean_flipper = mean(flipper_length_mm, na.rm=T)
)
penguins %>%
group_by(species) %>%
summarize(
mean_flipper = mean(flipper_length_mm, na.rm = TRUE),
mean_mass = mean(body_mass_g, na.rm = TRUE)
)
penguins %>%
group_by(species) %>%
summarize(
mean_flipper = mean(flipper_length_mm, na.rm = TRUE),
mean_mass = mean(body_mass_g, na.rm = TRUE),
std_flipper = sd(flipper_length_mm),
std_mass = sd(body_mass_g),
cor_flip_mass = cor(flipper_length_mm, body_mass_g)
)
penguins %>%
group_by(species) %>%
summarize(
mean_flipper = mean(flipper_length_mm, na.rm = TRUE),
mean_mass = mean(body_mass_g, na.rm = TRUE),
std_flipper = sd(flipper_length_mm, na.rm = TRUE),
std_mass = sd(body_mass_g, na.rm = TRUE),
cor_flip_mass = cor(flipper_length_mm, body_mass_g, na.rm = TRUE)
)
penguins %>%
group_by(species) %>%
summarize(
mean_flipper = mean(flipper_length_mm, na.rm = TRUE),
mean_mass = mean(body_mass_g, na.rm = TRUE),
std_flipper = sd(flipper_length_mm, na.rm = TRUE),
std_mass = sd(body_mass_g, na.rm = TRUE),
cor_flip_mass = cor(flipper_length_mm, body_mass_g)
)
?cor
penguins %>%
ggplot(aes(x = flipper_length_mm)) +
geom_histogram(aes(fill = species),
alpha = 0.5,
position = "identity") +
scale_fill_manual(values = c("darkorange","darkorchid","cyan4"))
penguins %>%
ggplot(aes(x = flipper_length_mm)) +
geom_histogram(aes(fill = species),
alpha = 0.5,
position = "identity")
#| code-fold: true
data1 %>%
summarize(
mean_x = mean(x),
mean_y = mean(y),
std_x = sd(x),
std_y = sd(y),
cor_xy = cor(x,y)
)
#| code-fold: true
data1 %>%
summarize(
mean_x = mean(x),
mean_y = mean(y),
std_x = sd(x),
std_y = sd(y),
cor_xy = cor(x,y)
)
data2 %>%
summarize(
mean_x = mean(x),
mean_y = mean(y),
std_x = sd(x),
std_y = sd(y),
cor_xy = cor(x,y)
)
data3 %>%
summarize(
mean_x = mean(x),
mean_y = mean(y),
std_x = sd(x),
std_y = sd(y),
cor_xy = cor(x,y)
)
three_data <- bind_rows(data1, data2, data3)
#| code-fold: true
three_data %>%
group_by(dataset) %>%
summarize(
mean_x = mean(x),
mean_y = mean(y),
std_x = sd(x),
std_y = sd(y),
cor_xy = cor(x,y)
)
#| code-fold: true
data1 <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/data1.csv") %>%
mutate(dataset = "data1")
data2 <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/data2.csv") %>%
mutate(dataset = "data2")
data3 <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/data3.csv") %>%
mutate(dataset = "data2")
three_data <- bind_rows(data1, data2, data3)
#| code-fold: true
three_data %>%
group_by(dataset) %>%
summarize(
mean_x = mean(x),
mean_y = mean(y),
std_x = sd(x),
std_y = sd(y),
cor_xy = cor(x,y)
)
#| code-fold: true
data1 <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/data1.csv") %>%
mutate(dataset = "data1")
data2 <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/data2.csv") %>%
mutate(dataset = "data2")
data3 <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/data3.csv") %>%
mutate(dataset = "data3")
three_data <- bind_rows(data1, data2, data3)
#| code-fold: true
three_data %>%
group_by(dataset) %>%
summarize(
mean_x = mean(x),
mean_y = mean(y),
std_x = sd(x),
std_y = sd(y),
cor_xy = cor(x,y)
)
state_school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv")
names(state_school)
state_school %>% glimpse
