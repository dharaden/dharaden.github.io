geom_smooth(aes(x = flipper_length_mm,
y = body_mass_g))
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point(aes(color = species)) +
geom_smooth()
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g)) +
geom_point(aes(color = species)) +
geom_smooth(method = 'nls')
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g,
color = species)) +
geom_point(aes(color = species)) +
geom_smooth(method = 'lm')
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g,
color = species)) +
geom_point(aes(color = species)) +
geom_smooth(method = 'nls')
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g,
color = species)) +
geom_point() +
geom_smooth(method = 'lm')
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g,
color = species)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(
title = "Palmer Penguins",
subtitle = "Body Mass by Flipper Length",
x = "Flipper Length (mm)"
)
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g,
color = species)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(
title = "Palmer Penguins",
subtitle = "Body Mass by Flipper Length",
x = "Flipper Length (mm)"
)
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g,
color = species)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(
title = "Palmer Penguins",
subtitle = "Body Mass by Flipper Length",
x = "Flipper Length (mm)",
y = "Body Mass (g)"
)
penguins %>%
ggplot(aes(x = flipper_length_mm,
y = body_mass_g,
color = species)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(
title = "Palmer Penguins",
subtitle = "Body Mass by Flipper Length",
x = "Flipper Length (mm)",
y = "Body Mass (g)",
color = "Species"
)
penguin <- data(penguins)
data(penguins)
View(penguins_raw)
penguins %>%
group_by(species) %>%
summarize(
mean_flipper = mean(flipper_length_mm)
)
penguins %>%
group_by(species) %>%
summarize(
mean_flipper = mean(flipper_length_mm, na.rm=T)
)
penguins %>%
group_by(species) %>%
summarize(
mean_flipper = mean(flipper_length_mm, na.rm = TRUE),
mean_mass = mean(body_mass_g, na.rm = TRUE)
)
penguins %>%
group_by(species) %>%
summarize(
mean_flipper = mean(flipper_length_mm, na.rm = TRUE),
mean_mass = mean(body_mass_g, na.rm = TRUE),
std_flipper = sd(flipper_length_mm),
std_mass = sd(body_mass_g),
cor_flip_mass = cor(flipper_length_mm, body_mass_g)
)
penguins %>%
group_by(species) %>%
summarize(
mean_flipper = mean(flipper_length_mm, na.rm = TRUE),
mean_mass = mean(body_mass_g, na.rm = TRUE),
std_flipper = sd(flipper_length_mm, na.rm = TRUE),
std_mass = sd(body_mass_g, na.rm = TRUE),
cor_flip_mass = cor(flipper_length_mm, body_mass_g, na.rm = TRUE)
)
penguins %>%
group_by(species) %>%
summarize(
mean_flipper = mean(flipper_length_mm, na.rm = TRUE),
mean_mass = mean(body_mass_g, na.rm = TRUE),
std_flipper = sd(flipper_length_mm, na.rm = TRUE),
std_mass = sd(body_mass_g, na.rm = TRUE),
cor_flip_mass = cor(flipper_length_mm, body_mass_g)
)
?cor
penguins %>%
ggplot(aes(x = flipper_length_mm)) +
geom_histogram(aes(fill = species),
alpha = 0.5,
position = "identity") +
scale_fill_manual(values = c("darkorange","darkorchid","cyan4"))
penguins %>%
ggplot(aes(x = flipper_length_mm)) +
geom_histogram(aes(fill = species),
alpha = 0.5,
position = "identity")
#| code-fold: true
data1 %>%
summarize(
mean_x = mean(x),
mean_y = mean(y),
std_x = sd(x),
std_y = sd(y),
cor_xy = cor(x,y)
)
#| code-fold: true
data1 %>%
summarize(
mean_x = mean(x),
mean_y = mean(y),
std_x = sd(x),
std_y = sd(y),
cor_xy = cor(x,y)
)
data2 %>%
summarize(
mean_x = mean(x),
mean_y = mean(y),
std_x = sd(x),
std_y = sd(y),
cor_xy = cor(x,y)
)
data3 %>%
summarize(
mean_x = mean(x),
mean_y = mean(y),
std_x = sd(x),
std_y = sd(y),
cor_xy = cor(x,y)
)
three_data <- bind_rows(data1, data2, data3)
#| code-fold: true
three_data %>%
group_by(dataset) %>%
summarize(
mean_x = mean(x),
mean_y = mean(y),
std_x = sd(x),
std_y = sd(y),
cor_xy = cor(x,y)
)
#| code-fold: true
data1 <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/data1.csv") %>%
mutate(dataset = "data1")
data2 <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/data2.csv") %>%
mutate(dataset = "data2")
data3 <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/data3.csv") %>%
mutate(dataset = "data2")
three_data <- bind_rows(data1, data2, data3)
#| code-fold: true
three_data %>%
group_by(dataset) %>%
summarize(
mean_x = mean(x),
mean_y = mean(y),
std_x = sd(x),
std_y = sd(y),
cor_xy = cor(x,y)
)
#| code-fold: true
data1 <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/data1.csv") %>%
mutate(dataset = "data1")
data2 <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/data2.csv") %>%
mutate(dataset = "data2")
data3 <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/data3.csv") %>%
mutate(dataset = "data3")
three_data <- bind_rows(data1, data2, data3)
#| code-fold: true
three_data %>%
group_by(dataset) %>%
summarize(
mean_x = mean(x),
mean_y = mean(y),
std_x = sd(x),
std_y = sd(y),
cor_xy = cor(x,y)
)
state_school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv")
names(state_school)
state_school %>% glimpse
(20+55+21)/3
(91+22)/2
(20+55+21+91+22)/5
(32-41.8)^2
(56.5-41.8)^2
216.09 * 2
96.04*2
96.04*3
score <- c(20, 55, 21, 91, 22)
group_m <- c(32, 32, 32, 56.5, 56.5)
score - group_m
(score - group_m)^2
#| code-fold: true
score <- c(20, 55, 21, 91, 22)
group_m <- c(32, 32, 32, 56.5, 56.5)
sq_dev <- (score - group_m)^2
sum(sq_dev)
sum(sq_dev)/3
# File management
library(here)
# for dplyr, ggplot2
library(tidyverse)
#Loading data
library(rio)
#Remove Scientific Notation
options(scipen=999)
720.3/1058.167
#| code-fold: true
#|
data.frame(F = c(0,8)) %>%
ggplot(aes(x = F)) +
stat_function(fun = function(x) df(x, df1 = 3, df2 = 196),
geom = "line") +
stat_function(fun = function(x) df(x, df1 = 3, df2 = 196),
geom = "area", xlim = c(2.65, 8), fill = "purple") +
geom_vline(aes(xintercept = 2.65), color = "purple") +
geom_vline(aes(xintercept = 0.68), color = "red") +
scale_y_continuous("Density") + scale_x_continuous("F statistic", breaks = NULL) +
theme_bw(base_size = 20)
?geom_vline
#| code-fold: true
#|
data.frame(F = c(0,8)) %>%
ggplot(aes(x = F)) +
stat_function(fun = function(x) df(x, df1 = 3, df2 = 196),
geom = "line") +
stat_function(fun = function(x) df(x, df1 = 3, df2 = 196),
geom = "area", xlim = c(2.65, 8), fill = "purple") +
geom_vline(aes(xintercept = 2.65), color = "purple") +
geom_vline(aes(xintercept = 0.68), color = "red") +
scale_y_continuous("Density") + scale_x_continuous("F statistic", breaks = NULL) +
theme_bw(base_size = 20)
#| code-fold: true
#|
data.frame(F = c(0,8)) %>%
ggplot(aes(x = F)) +
stat_function(fun = function(x) df(x, df1 = 3, df2 = 196),
geom = "line") +
stat_function(fun = function(x) df(x, df1 = 3, df2 = 196),
geom = "area", xlim = c(2.65, 8), fill = "purple") +
geom_vline(aes(xintercept = 2.65), color = "purple") +
geom_vline(aes(xintercept = 0.68), color = "red") +
annotate("text",
label = "F=0.68",
x = 0.7, y = 0.65)) +
#| code-fold: true
#|
data.frame(F = c(0,8)) %>%
ggplot(aes(x = F)) +
stat_function(fun = function(x) df(x, df1 = 3, df2 = 196),
geom = "line") +
stat_function(fun = function(x) df(x, df1 = 3, df2 = 196),
geom = "area", xlim = c(2.65, 8), fill = "purple") +
geom_vline(aes(xintercept = 2.65), color = "purple") +
geom_vline(aes(xintercept = 0.68), color = "red") +
annotate("text",
label = "F=0.68",
x = 0.7, y = 0.65) +
scale_y_continuous("Density") + scale_x_continuous("F statistic", breaks = NULL) +
theme_bw(base_size = 20)
#| code-fold: true
#|
data.frame(F = c(0,8)) %>%
ggplot(aes(x = F)) +
stat_function(fun = function(x) df(x, df1 = 3, df2 = 196),
geom = "line") +
stat_function(fun = function(x) df(x, df1 = 3, df2 = 196),
geom = "area", xlim = c(2.65, 8), fill = "purple") +
geom_vline(aes(xintercept = 2.65), color = "purple") +
geom_vline(aes(xintercept = 0.68), color = "red") +
annotate("text",
label = "F=0.68",
x = 1, y = 0.65, size = 8, color = "red") +
scale_y_continuous("Density") + scale_x_continuous("F statistic", breaks = NULL) +
theme_bw(base_size = 20)
#| code-fold: true
#|
data.frame(F = c(0,8)) %>%
ggplot(aes(x = F)) +
stat_function(fun = function(x) df(x, df1 = 3, df2 = 196),
geom = "line") +
stat_function(fun = function(x) df(x, df1 = 3, df2 = 196),
geom = "area", xlim = c(2.65, 8), fill = "purple") +
geom_vline(aes(xintercept = 2.65), color = "purple") +
geom_vline(aes(xintercept = 0.68), color = "red") +
annotate("text",
label = "F=0.68",
x = 0.7, y = 0.65, size = 8, color = "red") +
scale_y_continuous("Density") + scale_x_continuous("F statistic", breaks = NULL) +
theme_bw(base_size = 20)
#| code-fold: true
#|
data.frame(F = c(0,8)) %>%
ggplot(aes(x = F)) +
stat_function(fun = function(x) df(x, df1 = 3, df2 = 196),
geom = "line") +
stat_function(fun = function(x) df(x, df1 = 3, df2 = 196),
geom = "area", xlim = c(2.65, 8), fill = "purple") +
geom_vline(aes(xintercept = 2.65), color = "purple") +
geom_vline(aes(xintercept = 0.68), color = "red") +
annotate("text",
label = "F=0.68",
x = 1.3, y = 0.65, size = 8, color = "red") +
scale_y_continuous("Density") + scale_x_continuous("F statistic", breaks = NULL) +
theme_bw(base_size = 20)
# | code-fold: true
n <- 100
x <- rnorm(n, mean = 10, sd = 2)
y <- 2 * x + rnorm(n, mean = 0, sd = 2)
corr_data <- data.frame(x,y)
corr_data %>%
ggplot(aes(x,y)) +
geom_point() +
geom_smooth(method="lm")
# for dplyr, ggplot2
library(tidyverse)
#Loading data
library(rio)
#Remove Scientific Notation
options(scipen=999)
# | code-fold: true
n <- 100
x <- rnorm(n, mean = 10, sd = 2)
y <- 2 * x + rnorm(n, mean = 0, sd = 2)
corr_data <- data.frame(x,y)
corr_data %>%
ggplot(aes(x,y)) +
geom_point() +
geom_smooth(method="lm")
corr_data %>%
ggplot(aes(x,y)) +
geom_point() +
geom_smooth(method="lm",
se = FALSE)
# | code-fold: true
set.seed(42)
n <- 200
x <- rnorm(n, mean = 10, sd = 2)
y <- 2 * x + rnorm(n, mean = 0, sd = 2)
corr_data <- data.frame(x,y)
corr_data %>%
ggplot(aes(x,y)) +
geom_point() +
geom_smooth(method="lm",
se = FALSE)
# | code-fold: true
set.seed(42)
n <- 200
x <- rnorm(n, mean = 10, sd = 2)
y <- 2 * x + rnorm(n, mean = 0, sd = 2)
corr_data <- data.frame(x,y)
corr_data %>%
ggplot(aes(x,y)) +
geom_point() +
geom_smooth(method="lm",
se = FALSE)
corr_data %>%
ggplot(aes(x,y)) +
geom_point() +
geom_smooth(method="lm",
se = FALSE) +
labs(
x = "Number of Houses",
y = "Amount of Candy"
)
# for dplyr, ggplot2
library(tidyverse)
#Loading data
library(rio)
#Remove Scientific Notation
options(scipen=999)
# | code-fold: true
set.seed(42)
n <- 200
x <- rnorm(n, mean = 10, sd = 2)
y <- 2 * x + rnorm(n, mean = 0, sd = 2)
corr_data <- data.frame(x,y)
corr_data %>%
ggplot(aes(x,y)) +
geom_point() +
geom_smooth(method="lm",
se = FALSE) +
labs(
x = "Number of Houses",
y = "Amount of Candy"
)
cov(corr_data)
xy_cov <- cov(corr_data)
View(xy_cov)
cov(corr_data)
cov(corr_data)[1,2]
cor(corr_data)
cor(corr_data$x, corr_data$y)
cor.test(x, y, data = corr_data)
school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv")
View(school)
school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv") %>%
select(Ageyears, Sleep_Hours_Schoolnight, Sleep_Hours_Non_Schoolnight,
Reaction_time, Score_in_memory_game)
cor(school)
cor(school) %>%
kableExtra::kable()
#| code-fold: true
school <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/NM-NY_CAS.csv") %>%
select(Ageyears, Sleep_Hours_Schoolnight, Sleep_Hours_Non_Schoolnight,
Reaction_time, Score_in_memory_game) %>%
janitor::clean_names()
cor(school, use = "complete")
cor(school, use = "pairwise")
# nice tables
library(sjPlot)
tab_corr(school, na.deletion = "listwise", triangle = "lower")
#| code-fold: true
data1 <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/data1.csv") %>%
mutate(dataset = "data1")
data2 <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/data2.csv") %>%
mutate(dataset = "data2")
data3 <- import("https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/data/data3.csv") %>%
mutate(dataset = "data3")
three_data <- bind_rows(data1, data2, data3)
data1 %>%
ggplot(aes(x, y)) +
geom_point()
data1 %>%
ggplot(aes(x, y)) +
geom_point() +
geom_smooth
data1 %>%
ggplot(aes(x, y)) +
geom_point() +
geom_smooth(method = "lm")
data1 %>%
ggplot(aes(x, y)) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE)
library(ggpubr)
data1 %>%
ggscatter(x, y,
add = "reg.line")
ggscatter(data1, x, y,
add = "reg.line")
data1 %>%
ggscatter("x", "y",
add = "reg.line")
data1 %>%
ggscatter("x", "y")
data1 %>%
ggscatter("x", "y",
add = "reg.line")
data1 %>%
ggscatter("x", "y",
add = "reg.line") +
stat_cor()
three_data %>%
group_by(dataset) %>%
summarize(
mean_x = mean(x),
mean_y = mean(y),
std_x = sd(x),
std_y = sd(y),
cor_xy = cor(x,y)
)
data1 %>%
ggscatter("x", "y",
add = "reg.line") +
stat_cor() +
labs(title = "Dataset 1")
data1 %>%
ggscatter("x", "y",
add = "reg.line") +
stat_cor(label.y = 55) +
labs(title = "Dataset 1")
