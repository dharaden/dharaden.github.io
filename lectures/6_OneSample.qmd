---
title: "Categorical & One-Sample"
subtitle: "PSYC 640 - Fall 2023"
author: "Dustin Haraden, PhD"
format: 
  revealjs:
    multiplex: true
    slide-number: true
    incremental: true
    touch: true
    code-overflow: wrap
execute: 
  echo: true
editor: visual
---

```{r, include = F}
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
```

## Last week

NHST & *p-*values

Lab 2...feedback?

Frequency of Labs check-in

```{r, results = 'hide', message = F, warning = F}
library(here)
library(tidyverse)
library(psych)
library(psychTools)
library(knitr)
library(kableExtra)
library(ggpubr)
library(gganimate)
library(patchwork)

set.seed(42)
```

------------------------------------------------------------------------

## This Week...

-   The chi-square goodness-of-fit test
-   One-sample *t*-tests

------------------------------------------------------------------------

### Key questions:

-   How do we know if category frequencies are consistent with null hypothesis expectations?

-   How do we handle categories with very low frequencies?

-   How do we compare one sample to a population mean?

------------------------------------------------------------------------

## What are the steps of NHST?

::: columns
::: {.column width="50%"}
1.  Define null and alternative hypothesis.

2.  Set and justify alpha level.

3.  Determine which sampling distribution ( $z$, $t$, or $\chi^2$ for now)

4.  Calculate parameters of your sampling distribution under the null.

-   If $z$, calculate $\mu$ and $\sigma_M$
:::

::: {.column width="50%"}
5.  Calculate test statistic under the null.

-   If $z$, $\frac{\bar{X} - \mu}{\sigma_M}$

6.  Calculate probability of that test statistic or more extreme under the null, and compare to alpha.
:::
:::

------------------------------------------------------------------------

One-sample tests compare your given sample with a "known" population.

Research question: does this sample come from this population?

**Hypotheses**

-   $H_0$: Yes, this sample comes from this population.

-   $H_1$: No, this sample comes from a different population.

------------------------------------------------------------------------

## Example - Coffee Shop

Let's say we collect data on customers of a coffee shop and we want to see if there is an **equal number of folks** that come into the shop across all days. Therefore, we record how many individuals came into the coffee shop over a weeks time.

***How would we test this?***

-   First, setup the Null and alternative:

    -   $H_0$: Customers will be equal across all days.

    -   $H_1$: There will be more customers on one or multiple days than others and will not be equal

------------------------------------------------------------------------

## Example - Distribution

```{r}
#| code-fold: true
days <- c("M", "T", "W", "R", "F")
expected <- rep(50, length(days))
df <- data.frame(days, expected)
order <- c("M", "T", "W", "R", "F")

unif <- df %>% 
  ggplot(aes(x = days,
             y = expected)) + 
  geom_col() + 
  scale_x_discrete(limits = order) + 
  labs(title = "Uniform - Null") + 
  ylim(0, 65)

observed <- round(rnorm(5, mean = 55, sd = 4),2)
df2 <- data.frame(days, observed)

rand <- df %>% 
  ggplot(aes(x = days, 
             y = observed)) + 
  geom_col() + 
  scale_x_discrete(limits = order) + 
  labs(title = "Alternative") + 
  ylim(0, 65)

(unif + rand)
```

------------------------------------------------------------------------

## Example - Set Alpha

After determining the Null and Alternative Hypotheses, we set our Alpha level.

Let's keep things simple and keep it at convention to set it for $\alpha$ = 0.05

------------------------------------------------------------------------

## Example - Distribution

Now we determine the type of distribution that we will be working with

In the past we have used:

-   Normal Distribution ( $z$-scores )

-   t-distribution ( $t$-scores )

------------------------------------------------------------------------

Now we are going to be using a distribution that works with ***categorical (nominal)*** **data**.

**The** $\chi^2$ **- distribution**

::: nonincremental
-   We use this distribution because we are dealing with (1) one sample, and (2) a categorical outcome

-   **Note**: this test will provide statistical evidence of an association or relationship between two categorical variables
:::

***???*** The way you measure the variable determines whether it is categorical or continuous. We can create summary statistics from categorical variables by counting or calculating proportions -- but that makes the summary statistics continuous, *not the outcome variable itself*.

------------------------------------------------------------------------

## Distribution - Degrees of freedom

The $\chi^2$ distribution is a single-parameter distribution defined by it's degrees of freedom.

In the case of a **goodness-of-fit test** (like this one), the degrees of freedom are $\textbf{k-1}$, where k is the number of groups.

------------------------------------------------------------------------

## Degrees of freedom

The **Degrees of freedom** are the number of genuinely independent things in a calculation. It's specifically calculated as the number of quantities in a calculation minus the number of constraints.

What it means in principle is that given a set number of categories (k) and a constraint (the proportions have to add up to 1), I can freely choose numbers for k-1 categories. But for the kth category, there's only one number that will work.

------------------------------------------------------------------------

::: columns
::: {.column width="30%"}
[The degrees of freedom are the number of categories (k) minus 1. Given that the category frequencies must sum to the total sample size, k-1 category frequencies are free to vary; the last is determined.]{style="font-size:30px;"}
:::

::: {.column width="70%"}
```{r}
(critical_val = qchisq(p = 0.95, df = 5-1))
```

```{r}
#| code-fold: true
#| 

data.frame(x = seq(0,20)) %>%
  ggplot(aes(x = x)) +
  stat_function(fun = function(x) dchisq(x, df = 5-1), geom = "line") +
  stat_function(fun = function(x) dchisq(x, df = 5-1), geom = "area", fill = "purple", 
                xlim =c(critical_val, 20)) +
  geom_vline(aes(xintercept = critical_val), linetype = 2, color = "purple")+
  geom_text(aes(x = critical_val+2, y = dchisq(critical_val, 5-1) + .05, 
                label = paste("Critical Value =", round (critical_val,2))), angle = 90)+
  labs(x = "Chi-Square", y = "Density", title = "Area under the curve") +
  theme_pubr(base_size = 20)
```
:::
:::

------------------------------------------------------------------------

## Calculating the $\chi^2$ test statistic

Let's first take a look at the observed data that we have as well as the expected data under the Null

```{r}
observed <- df2
expected <- df
```

|              |       |                   |                   |                   |                   |                   |
|-----------|-----------|-----------|-----------|-----------|-----------|-----------|
|              |       | **Monday**        | **Tuesday**       | **Wednesday**     | **Thursday**      | **Friday**        |
| **Observed** | $O_i$ | `r observed[1,2]` | `r observed[2,2]` | `r observed[3,2]` | `r observed[4,2]` | `r observed[5,2]` |
| **Expected** | $E_i$ | `r expected[1,2]` | `r expected[2,2]` | `r expected[3,2]` | `r expected[4,2]` | `r expected[5,2]` |

Now what? We need some way to index differences between these frequencies so that we can sensibly determine how rare or unusual the observed data are compared to the null distribution.

------------------------------------------------------------------------

$$\chi^2_{df = k-1} = \sum^k_{i=1}\frac{(O_i-E_i)^2}{E_i}$$

The chi-square goodness of fit (GOF) statistic compares observed and expected frequencies. It is small when the observed frequencies closely match the expected frequencies under the null hypothesis. The chi-square distribution can be used to determine the particular $\chi^2$ value that corresponds to a rare or unusual profile of observed frequencies.

------------------------------------------------------------------------

|                |             |                                   |                                   |                                   |                                   |                                   |
|-----------|-----------|-----------|-----------|-----------|-----------|-----------|
|                |             | **Monday**                        | **Tuesday**                       | **Wednesday**                     | **Thursday**                      | **Friday**                        |
| **Observed**   | $O_i$       | `r observed[1,2]`                 | `r observed[2,2]`                 | `r observed[3,2]`                 | `r observed[4,2]`                 | `r observed[5,2]`                 |
| **Expected**   | $E_i$       | `r expected[1,2]`                 | `r expected[2,2]`                 | `r expected[3,2]`                 | `r expected[4,2]`                 | `r expected[5,2]`                 |
| **Difference** | $O_i - E_i$ | `r observed[1,2] - expected[1,2]` | `r observed[2,2] - expected[2,2]` | `r observed[3,2] - expected[3,2]` | `r observed[4,2] - expected[4,2]` | `r observed[5,2] - expected[5,2]` |

------------------------------------------------------------------------

```{r, results = 'asis', message=F}
#| code-fold: true
chisq_tab <- full_join(expected, observed) %>% 
  mutate(diff = (observed - expected))
chisq_tab %>% 
  kable(., format = "html", digits = 2, 
        align = c("c", "c", "c", "c"), 
        col.names = c("Days", "Expected", "Observed", "Difference"))

```

------------------------------------------------------------------------

We now have the differences between the expected and observed, but there are likely going to be some negative numbers. To fix this, we can square the differences

```{r, results = 'asis', message=F}
#| code-fold: true
chisq_tab %>% 
  mutate(sq_diff=(diff^2)) %>% 
  kable(., format = "html", digits = 2, 
        align = c("c", "c", "c", "c", "c"), 
        col.names = c("Days", "Expected", "Observed", "Difference", "Sq. Diff"))
```

------------------------------------------------------------------------

::: columns
::: {.column width="50%"}
Now we have a collection of numbers that are large whenever the null hypothesis makes a bad prediction and small when it makes a good prediction.

Next, we need to divide all numbers by the expected frequency as a way to put our estimate into perspective
:::

::: {.column width="50%"}
```{r, results = 'asis', message=F}
#| code-fold: true
chisq_tab <- chisq_tab %>% 
  mutate(sq_diff=(diff^2)) %>%
  mutate(error = sq_diff/50) 

chisq_tab %>% 
  kable(., format = "html", digits = 2, 
        align = c("c", "c", "c", "c", "c", "c"), 
        col.names = c("Days", "Expected", "Observed", "Difference", "Sq. Diff", "Error Score"))

```
:::
:::

------------------------------------------------------------------------

We can finish this off by taking each of our scores related to "error" and adding them up

The result is the **goodness of fit** statistic (GOF) or $\chi^2$

::: columns
::: {.column width="50%"}
```{r}
chi_square <- sum(chisq_tab$error)
chi_square
```

Let's compare that to the critical $\chi^2$ value given the df of the sample

```{r}
critical_val <- qchisq(p = 0.95, df = length(chisq_tab$days)-1)
critical_val
```
:::

::: {.column width="50%"}
Calculate the probability of getting our sample statistic or greater ***if the null were true***

```{r}
pchisq(q = chi_square, df = length(chisq_tab$days)-1, lower.tail = F)
```

**What can we conclude?**
:::
:::

------------------------------------------------------------------------

::: columns
::: {.column width="30%"}
[The degrees of freedom are the number of categories (k) minus 1. Given that the category frequencies must sum to the total sample size, k-1 category frequencies are free to vary; the last is determined.]{style="font-size:30px;"}
:::

::: {.column width="70%"}
```{r}
#| code-fold: true
#| 
data.frame(x = seq(0,20)) %>%
  ggplot(aes(x = x)) +
  stat_function(fun = function(x) dchisq(x, df = length(chisq_tab$days)-1), geom = "line") +
  stat_function(fun = function(x) dchisq(x, df = length(chisq_tab$days)-1), geom = "area", fill = "purple", 
                xlim =c(critical_val, 20)) +
  geom_vline(aes(xintercept = critical_val), linetype = 2, color = "purple")+
    geom_vline(aes(xintercept = chi_square), linetype = 2, color = "black")+
  geom_text(aes(x = critical_val+2, y = dchisq(critical_val, length(chisq_tab$days)-1) + .05, 
                label = paste("Critical Value =", round (critical_val,2))), angle = 90)+
    geom_text(aes(x = chi_square+2, y = dchisq(critical_val, length(chisq_tab$days)-1) + .05, 
                label = paste("Test statistic =", round (chi_square,2))), angle = 90)+
  labs(x = "Chi-Square", y = "Density", title = "Area under the curve") +
  theme_pubr(base_size = 20)
```
:::
:::

------------------------------------------------------------------------

::: columns
::: {.column width="30%"}
[The degrees of freedom are the number of categories (k) minus 1. Given that the category frequencies must sum to the total sample size, k-1 category frequencies are free to vary; the last is determined.]{style="font-size:30px;"}
:::

::: {.column width="70%"}
```{r}
#| code-fold: true
#| 
data.frame(x = seq(0,20)) %>%
  ggplot(aes(x = x)) +
  stat_function(fun = function(x) dchisq(x, df = length(chisq_tab$days)-1), geom = "line") +
  stat_function(fun = function(x) dchisq(x, df = length(chisq_tab$days)-1), geom = "area", fill = "purple", 
                xlim =c(chi_square, 20)) +
  geom_vline(aes(xintercept = critical_val), linetype = 2, color = "black")+
  geom_vline(aes(xintercept = chi_square), linetype = 2, color = "purple")+
  geom_text(aes(x = critical_val+2, y = dchisq(critical_val, length(chisq_tab$days)-1) + .05, 
                label = paste("Critical Value =", round (critical_val,2))), angle = 90)+
  geom_text(aes(x = chi_square+2, y = dchisq(critical_val, length(chisq_tab$days)-1) + .05, 
                label = paste("Test statistic =", round (chi_square,2))), angle = 90)+
  labs(x = "Chi-Square", y = "Density", title = "Area under the curve") +
  theme_pubr(base_size = 20)
```
:::
:::

------------------------------------------------------------------------

## Recap of the Steps

1.  Define null and alternative hypothesis.

-   $H_0$: No difference across days

-   $H_1$: Days will be different

2.  Set and justify alpha level $\alpha$ = 0.05

3.  Determine which sampling distribution ( $\chi^2$ )

4.  Calculate parameters of your sampling distribution under the null.

-   Calculate $\chi^2$-critical: `r critical_val`

## Recap of the Steps (con't.)

5.  Calculate test statistic under the null.

-   $\chi^2_{df = k-1} = \sum^k_{i=1}\frac{(O_i-E_i)^2}{E_i}$
-   `r chi_square`

6.  Calculate probability of that test statistic or more extreme under the null, and compare to alpha.

    ```{r}
    pchisq(q = chi_square, df = length(chisq_tab$days)-1, lower.tail = F)
    ```

------------------------------------------------------------------------

## But what if...

In the example, we had a null distribution that was distributed uniformly

What if that isn't a super interesting research question?

Instead we may want to compare the proportions in our sample to a larger population

## Example 2 - Schools & Super-powers

The data were obtained from [Census at School](https://ww2.amstat.org/censusatschool/), a website developed by the American Statistical Association tohelp students in the 4th through 12th grades understand statistical problem-solving.

\- The site sponsors a survey that students can complete and a database that students and instructors can use to illustrate principles in quantitative methods.

\- The database includes students from all 50 states, from grade levels 4 through 12, both boys and girls, who have completed the survey dating back to 2010.

------------------------------------------------------------------------

Let's focus on a single question:

*Which of the following superpowers would you most like to have? Select one.*

::: nonincremental
::: columns
::: {.column width="50%"}
-   Invisibility
-   Telepathy (read minds)
-   Freeze time
:::

::: {.column width="50%"}
-   Super strength
-   Fly
:::
:::
:::

The responses from 250 randomly selected New York students were obtained from the Census at School database.

```{r}
#school <- read_csv()
```

------------------------------------------------------------------------

## The usefulness of $\chi^2$

How often will you conducted a $chi^2$ goodness of fit test on raw data?

-   (Probably) never

How often will you come across $\chi^2$ tests?

-   (Probably) a lot!

The goodness of fit test is used to statistically test the how well a model fits data.

------------------------------------------------------------------------

To calculate Goodness of Fit of a model to data, you build a statistical model of the process as you believe it is in the world.

::: nonincremental
-   example: literacy \~ age + parental involvement
:::

Then you estimate each subject's predicted value based on your model.

You compare each subject's predicted value to their actual value -- the difference is called the **residual** ( $\varepsilon$ ).

------------------------------------------------------------------------

If your model is a good fit, then

$$\Sigma_1^N\varepsilon^2 = \chi^2$$ which we compare to the distribution of $\chi^2_{N-p}$ .

Significant chi-square tests suggest the model does not fit -- the data have values that are far away from "expected."

------------------------------------------------------------------------

When we move from categorical outcomes to variables measured on an interval or ratio scale, we become interested in means rather than frequencies. Comparing means is usually done with the *t*-test, of which there are several forms.

The one-sample *t*-test is appropriate when a single sample mean is compared to a population mean but the population standard deviation is unknown. A sample estimate of the population standard deviation is used instead. The appropriate sampling distribution is the t-distribution, with N-1 degrees of freedom.

$$t_{df=N-1} = \frac{\bar{X}-\mu}{\frac{\hat{\sigma}}{\sqrt{N}}}$$

The heavier tails of the t-distribution, especially for small N, are the penalty we pay for having to estimate the population standard deviation from the sample.

------------------------------------------------------------------------
