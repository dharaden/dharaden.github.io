{"title":"Figures: Using ggplot2","markdown":{"yaml":{"title":"Figures: Using ggplot2","subtitle":"PSYC 640 - Fall 2023","author":"Dustin Haraden, PhD","format":{"revealjs":{"multiplex":true,"scrollable":true,"slide-number":true,"incremental":false,"touch":true,"code-overflow":"wrap","theme":"dark"}},"execute":{"echo":true},"editor":"visual","editor_options":{"chunk_output_type":"console"}},"headingText":"Last Class","containsRefs":false,"markdown":"\n\n```{r, include = F}\nknitr::opts_chunk$set(message = FALSE, warning = FALSE)\n```\n\n\n::: nonincremental\n-   Comparing Means: $t$-test\n    -   Independent Samples $t$-test Review\n    -   Paired Samples $t$-test\n:::\n\n------------------------------------------------------------------------\n\n## Looking Ahead\n\n-   Plan to have 2 more labs that will be similar to the last lab\n\n    -   Likely take place on 10/25 and sometime the week of 11/13\n\n-   Outside of these labs, I am going to plan on having additional mini-labs\n\n    -   Likely to take place on 11/1, 11/22 and 11/29 (will update based on how things are going in class)\n\n------------------------------------------------------------------------\n\n## Today...\n\nWorking with `ggplot2` to get some really fancy visualizations!\n\nMaybe integrating some generative AI (ChatGPT) to help us out too\n\n```{r, results = 'hide', message = F, warning = F}\n# File management\nlibrary(here)\n# for dplyr, ggplot2\nlibrary(tidyverse)\n#Loading data\nlibrary(rio)\n\n#for the penguins dataset\n#install.packages('palmerpenguins')\nlibrary(palmerpenguins)\n\n#Remove Scientific Notation \noptions(scipen=999)\n```\n\n------------------------------------------------------------------------\n\n## Take a look at the data\n\nWill be using a dataset from the `palmerpenguins` library ([link](https://allisonhorst.github.io/palmerpenguins/articles/intro.html#exploring-distributions)) which is a dataset about...[penguins](https://www.youtube.com/watch?v=-GnLDJAgrws). This function will pull that data into our environment:\n\n```{r}\ndata(penguins)\n```\n\nNow we can get some descriptive statistics:\n\n```{r}\n#| code-fold: true\npenguins %>% \n  group_by(species) %>% \n  summarize(\n    mean_flipper = mean(flipper_length_mm, na.rm = TRUE),\n    mean_mass = mean(body_mass_g, na.rm = TRUE),\n    std_flipper = sd(flipper_length_mm, na.rm = TRUE), \n    std_mass = sd(body_mass_g, na.rm = TRUE), \n    cor_flip_mass = cor(flipper_length_mm, body_mass_g)\n  )\n```\n\n# `ggplot2`\n\n------------------------------------------------------------------------\n\n## `ggplot2` from the `tidyverse`\n\nSince we have already installed and loaded the library, we don't have to do anything else at this point!\n\n`ggplot2` follows the \"grammar of graphics\"\n\n-   Theoretical framework for creating data visualizations\n-   Breaks the process down into separate components:\n\n::: columns\n::: {.column width=\"50%\"}\nData\n\nAesthetics (`aes`)\n\nGeometric Objects (`geoms`)\n:::\n\n::: {.column width=\"50%\"}\nFaceting\n\nThemes\n:::\n:::\n\n------------------------------------------------------------------------\n\n## Grammar of Graphics\n\n[![](/images/grammargraphics.webp){width=\"779\"}](https://gkesari.medium.com/my-talk-on-grammar-of-graphics-the-secret-sauce-of-powerful-data-stories-3da618cf1bbf)\n\n# `ggplot2` [cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/data-visualization.pdf)\n\n------------------------------------------------------------------------\n\n## `ggplot2` syntax {.smaller}\n\nThere is a basic structure to create a plot within `ggplot2`, and consists of at least these three things:\n\n1.  A Data Set\n2.  Coordinate System\n3.  Geoms - visual marks to represent the data points\n\nIn R it looks like this:\n\n```{r, eval=FALSE}\nggplot(data = <DATA>) + \n  <GEOM_FUNCTION>(mapping = aes(<MAPPINGS>))\n\n#or how I like to do it\n<DATA> %>% \n  ggplot(aes(<MAPPINGS>)) + \n  <GEOM_FUNCTION>()\n```\n\n------------------------------------------------------------------------\n\n## `ggplot2` syntax\n\nLet's start with a basic figure with `palmerpenguins`\n\n**First** we will define the data that we are using and the variables we are visualizing\n\n```{r, eval = FALSE}\n#the dataset is called penguins\n\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g))\n```\n\nWhat happens?\n\n------------------------------------------------------------------------\n\nWe forgot to tell it what to do with the data!\n\nNeed to add the appropriate `geom` to have it plot points for each observation\n\n```{r, eval = FALSE}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g)) + \n  geom_point()\n```\n\n***\\\nNote:*** the `geom_point()` layer will inherit what is in the `aes()` in the previous layer\n\n------------------------------------------------------------------------\n\n## Adding in Color\n\nMaybe we would like to have each of the points colored by their respective `species`\n\nThis information will be added to the `aes()` within the `geom_point()` layer\n\n```{r, eval = FALSE}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g)) + \n  geom_point(aes(color = species))\n```\n\n------------------------------------------------------------------------\n\n## Including a fit line\n\nWhy don't we put in a line that represents the relationship between these variables?\n\nWe will want to add another layer/geom\n\n```{r, eval = FALSE}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g)) + \n  geom_point(aes(color = species)) + \n  geom_smooth()\n```\n\n\\\nThat looks a little wonky...why is that? Did you get a note in the console?\n\n------------------------------------------------------------------------\n\n## Including a fit line\n\nThe `geom_smooth()` defaults to using a loess line to fit to the data\n\nIn order to update that, we need to change some of the defaults for that layer and specify that we want a \"linear model\" or `lm` function to the data\n\n```{r, eval = FALSE}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g)) + \n  geom_point(aes(color = species)) + \n  geom_smooth(method = 'lm')\n```\n\n\\\nDid that look a little better?\n\n------------------------------------------------------------------------\n\n## Individual fit lines\n\nIt might make more sense to have individual lines for each of the species instead of something that is across all\n\n```{r, eval = FALSE}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g, \n             color = species)) + \n  geom_point() + \n  geom_smooth(method = 'lm')\n```\n\n\\\nWhat did we move around from the last set of code?\n\n------------------------------------------------------------------------\n\n## Updating Labels/Title\n\nIt will default to including the variable names as the `x` and `y` labels, but that isn't something that makes sense. Also would be good to have a title!\n\nWe add on another layer called `labs()` for our labels ([link](https://ggplot2.tidyverse.org/reference/labs.html))\n\n```{r, eval = FALSE}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g, \n             color = species)) + \n  geom_point() + \n  geom_smooth(method = 'lm') + \n  labs(\n    title = \"Palmer Penguins\",\n    subtitle = \"Body Mass by Flipper Length\", \n    x = \"Flipper Length (mm)\", \n    y = \"Body Mass (g)\", \n    color = \"Species\"\n  )\n```\n\n------------------------------------------------------------------------\n\n## Penguin Histogram\n\nTaken from the website for `palmerpenguins` ([link](https://allisonhorst.github.io/palmerpenguins/articles/intro.html#exploring-distributions))\n\n```{r}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm)) +\n    geom_histogram(aes(fill = species), \n                   alpha = 0.5, \n                   position = \"identity\")\n```\n\n# Example 2\n\nI have uploaded three datasets. I would like us to explore the datasets together to see what is going on with them.\n\n------------------------------------------------------------------------\n\n## The Three Datasets\n\n```{r}\n#| code-fold: true\ndata1 <- import(\"https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/courses/PSYC640_fall23/data/data1.csv\") %>% \n  mutate(dataset = \"data1\")\n\ndata2 <- import(\"https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/courses/PSYC640_fall23/data/data2.csv\") %>% \n  mutate(dataset = \"data2\")\n\ndata3 <- import(\"https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/courses/PSYC640_fall23/data/data3.csv\") %>% \n  mutate(dataset = \"data3\")\n```\n\nWe need to combine them together just to make things easier:\n\n```{r}\nthree_data <- bind_rows(data1, data2, data3)\n```\n\n------------------------------------------------------------------------\n\n## Descriptive Stats on the 3\n\n```{r}\n#| code-fold: true\nthree_data %>%\n  group_by(dataset) %>% \n  summarize(\n    mean_x = mean(x),\n    mean_y = mean(y),\n    std_x = sd(x), \n    std_y = sd(y), \n    cor_xy = cor(x,y)\n  )\n```\n\n------------------------------------------------------------------------\n\n## Visualize the datasets\n\nCreate a scatterplot for each of the datasets\n\nBut I didn't talk about how to do that for multiple datasets...\n\nCheck out [ChatGPT](https://chat.openai.com/)\n\n------------------------------------------------------------------------\n\n# Try it out on data\n\nTake a look at the data that we have been using and try making various visualizations for two of the variables\n\n```{r}\nstate_school <- import(\"https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/courses/PSYC640_fall23/data/NM-NY_CAS.csv\")\n```\n\n# Next time...\n\n-   ANOVA!\n","srcMarkdownNoYaml":"\n\n```{r, include = F}\nknitr::opts_chunk$set(message = FALSE, warning = FALSE)\n```\n\n## Last Class\n\n::: nonincremental\n-   Comparing Means: $t$-test\n    -   Independent Samples $t$-test Review\n    -   Paired Samples $t$-test\n:::\n\n------------------------------------------------------------------------\n\n## Looking Ahead\n\n-   Plan to have 2 more labs that will be similar to the last lab\n\n    -   Likely take place on 10/25 and sometime the week of 11/13\n\n-   Outside of these labs, I am going to plan on having additional mini-labs\n\n    -   Likely to take place on 11/1, 11/22 and 11/29 (will update based on how things are going in class)\n\n------------------------------------------------------------------------\n\n## Today...\n\nWorking with `ggplot2` to get some really fancy visualizations!\n\nMaybe integrating some generative AI (ChatGPT) to help us out too\n\n```{r, results = 'hide', message = F, warning = F}\n# File management\nlibrary(here)\n# for dplyr, ggplot2\nlibrary(tidyverse)\n#Loading data\nlibrary(rio)\n\n#for the penguins dataset\n#install.packages('palmerpenguins')\nlibrary(palmerpenguins)\n\n#Remove Scientific Notation \noptions(scipen=999)\n```\n\n------------------------------------------------------------------------\n\n## Take a look at the data\n\nWill be using a dataset from the `palmerpenguins` library ([link](https://allisonhorst.github.io/palmerpenguins/articles/intro.html#exploring-distributions)) which is a dataset about...[penguins](https://www.youtube.com/watch?v=-GnLDJAgrws). This function will pull that data into our environment:\n\n```{r}\ndata(penguins)\n```\n\nNow we can get some descriptive statistics:\n\n```{r}\n#| code-fold: true\npenguins %>% \n  group_by(species) %>% \n  summarize(\n    mean_flipper = mean(flipper_length_mm, na.rm = TRUE),\n    mean_mass = mean(body_mass_g, na.rm = TRUE),\n    std_flipper = sd(flipper_length_mm, na.rm = TRUE), \n    std_mass = sd(body_mass_g, na.rm = TRUE), \n    cor_flip_mass = cor(flipper_length_mm, body_mass_g)\n  )\n```\n\n# `ggplot2`\n\n------------------------------------------------------------------------\n\n## `ggplot2` from the `tidyverse`\n\nSince we have already installed and loaded the library, we don't have to do anything else at this point!\n\n`ggplot2` follows the \"grammar of graphics\"\n\n-   Theoretical framework for creating data visualizations\n-   Breaks the process down into separate components:\n\n::: columns\n::: {.column width=\"50%\"}\nData\n\nAesthetics (`aes`)\n\nGeometric Objects (`geoms`)\n:::\n\n::: {.column width=\"50%\"}\nFaceting\n\nThemes\n:::\n:::\n\n------------------------------------------------------------------------\n\n## Grammar of Graphics\n\n[![](/images/grammargraphics.webp){width=\"779\"}](https://gkesari.medium.com/my-talk-on-grammar-of-graphics-the-secret-sauce-of-powerful-data-stories-3da618cf1bbf)\n\n# `ggplot2` [cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/data-visualization.pdf)\n\n------------------------------------------------------------------------\n\n## `ggplot2` syntax {.smaller}\n\nThere is a basic structure to create a plot within `ggplot2`, and consists of at least these three things:\n\n1.  A Data Set\n2.  Coordinate System\n3.  Geoms - visual marks to represent the data points\n\nIn R it looks like this:\n\n```{r, eval=FALSE}\nggplot(data = <DATA>) + \n  <GEOM_FUNCTION>(mapping = aes(<MAPPINGS>))\n\n#or how I like to do it\n<DATA> %>% \n  ggplot(aes(<MAPPINGS>)) + \n  <GEOM_FUNCTION>()\n```\n\n------------------------------------------------------------------------\n\n## `ggplot2` syntax\n\nLet's start with a basic figure with `palmerpenguins`\n\n**First** we will define the data that we are using and the variables we are visualizing\n\n```{r, eval = FALSE}\n#the dataset is called penguins\n\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g))\n```\n\nWhat happens?\n\n------------------------------------------------------------------------\n\nWe forgot to tell it what to do with the data!\n\nNeed to add the appropriate `geom` to have it plot points for each observation\n\n```{r, eval = FALSE}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g)) + \n  geom_point()\n```\n\n***\\\nNote:*** the `geom_point()` layer will inherit what is in the `aes()` in the previous layer\n\n------------------------------------------------------------------------\n\n## Adding in Color\n\nMaybe we would like to have each of the points colored by their respective `species`\n\nThis information will be added to the `aes()` within the `geom_point()` layer\n\n```{r, eval = FALSE}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g)) + \n  geom_point(aes(color = species))\n```\n\n------------------------------------------------------------------------\n\n## Including a fit line\n\nWhy don't we put in a line that represents the relationship between these variables?\n\nWe will want to add another layer/geom\n\n```{r, eval = FALSE}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g)) + \n  geom_point(aes(color = species)) + \n  geom_smooth()\n```\n\n\\\nThat looks a little wonky...why is that? Did you get a note in the console?\n\n------------------------------------------------------------------------\n\n## Including a fit line\n\nThe `geom_smooth()` defaults to using a loess line to fit to the data\n\nIn order to update that, we need to change some of the defaults for that layer and specify that we want a \"linear model\" or `lm` function to the data\n\n```{r, eval = FALSE}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g)) + \n  geom_point(aes(color = species)) + \n  geom_smooth(method = 'lm')\n```\n\n\\\nDid that look a little better?\n\n------------------------------------------------------------------------\n\n## Individual fit lines\n\nIt might make more sense to have individual lines for each of the species instead of something that is across all\n\n```{r, eval = FALSE}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g, \n             color = species)) + \n  geom_point() + \n  geom_smooth(method = 'lm')\n```\n\n\\\nWhat did we move around from the last set of code?\n\n------------------------------------------------------------------------\n\n## Updating Labels/Title\n\nIt will default to including the variable names as the `x` and `y` labels, but that isn't something that makes sense. Also would be good to have a title!\n\nWe add on another layer called `labs()` for our labels ([link](https://ggplot2.tidyverse.org/reference/labs.html))\n\n```{r, eval = FALSE}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g, \n             color = species)) + \n  geom_point() + \n  geom_smooth(method = 'lm') + \n  labs(\n    title = \"Palmer Penguins\",\n    subtitle = \"Body Mass by Flipper Length\", \n    x = \"Flipper Length (mm)\", \n    y = \"Body Mass (g)\", \n    color = \"Species\"\n  )\n```\n\n------------------------------------------------------------------------\n\n## Penguin Histogram\n\nTaken from the website for `palmerpenguins` ([link](https://allisonhorst.github.io/palmerpenguins/articles/intro.html#exploring-distributions))\n\n```{r}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm)) +\n    geom_histogram(aes(fill = species), \n                   alpha = 0.5, \n                   position = \"identity\")\n```\n\n# Example 2\n\nI have uploaded three datasets. I would like us to explore the datasets together to see what is going on with them.\n\n------------------------------------------------------------------------\n\n## The Three Datasets\n\n```{r}\n#| code-fold: true\ndata1 <- import(\"https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/courses/PSYC640_fall23/data/data1.csv\") %>% \n  mutate(dataset = \"data1\")\n\ndata2 <- import(\"https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/courses/PSYC640_fall23/data/data2.csv\") %>% \n  mutate(dataset = \"data2\")\n\ndata3 <- import(\"https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/courses/PSYC640_fall23/data/data3.csv\") %>% \n  mutate(dataset = \"data3\")\n```\n\nWe need to combine them together just to make things easier:\n\n```{r}\nthree_data <- bind_rows(data1, data2, data3)\n```\n\n------------------------------------------------------------------------\n\n## Descriptive Stats on the 3\n\n```{r}\n#| code-fold: true\nthree_data %>%\n  group_by(dataset) %>% \n  summarize(\n    mean_x = mean(x),\n    mean_y = mean(y),\n    std_x = sd(x), \n    std_y = sd(y), \n    cor_xy = cor(x,y)\n  )\n```\n\n------------------------------------------------------------------------\n\n## Visualize the datasets\n\nCreate a scatterplot for each of the datasets\n\nBut I didn't talk about how to do that for multiple datasets...\n\nCheck out [ChatGPT](https://chat.openai.com/)\n\n------------------------------------------------------------------------\n\n# Try it out on data\n\nTake a look at the data that we have been using and try making various visualizations for two of the variables\n\n```{r}\nstate_school <- import(\"https://raw.githubusercontent.com/dharaden/dharaden.github.io/main/courses/PSYC640_fall23/data/NM-NY_CAS.csv\")\n```\n\n# Next time...\n\n-   ANOVA!\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","incremental":false,"output-file":"08_Visualizations.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.3.433","auto-stretch":true,"editor":"visual","title":"Figures: Using ggplot2","subtitle":"PSYC 640 - Fall 2023","author":"Dustin Haraden, PhD","editor_options":{"chunk_output_type":"console"},"multiplex":true,"scrollable":true,"slideNumber":true,"touch":true,"theme":"dark"}}},"projectFormats":["html"]}